diff --git a/android/gradle.properties b/android/gradle.properties
index 94adc3a..a673820 100644
--- a/android/gradle.properties
+++ b/android/gradle.properties
@@ -1,3 +1,4 @@
 org.gradle.jvmargs=-Xmx1536M
 android.useAndroidX=true
 android.enableJetifier=true
+android.enableR8=true
diff --git a/lib/main.dart b/lib/main.dart
index 11655b6..5e1fbd0 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -1,117 +1,62 @@
 import 'package:flutter/material.dart';
 
-void main() {
-  runApp(MyApp());
-}
+import 'menu.dart';
+import 'widget/hello_world.dart';
+import 'widget/image_test.dart';
 
-class MyApp extends StatelessWidget {
-  // This widget is the root of your application.
-  @override
-  Widget build(BuildContext context) {
-    return MaterialApp(
-      title: 'Flutter Demo',
-      theme: ThemeData(
-        // This is the theme of your application.
-        //
-        // Try running your application with "flutter run". You'll see the
-        // application has a blue toolbar. Then, without quitting the app, try
-        // changing the primarySwatch below to Colors.green and then invoke
-        // "hot reload" (press "r" in the console where you ran "flutter run",
-        // or simply save your changes to "hot reload" in a Flutter IDE).
-        // Notice that the counter didn't reset back to zero; the application
-        // is not restarted.
-        primarySwatch: Colors.blue,
-        // This makes the visual density adapt to the platform that you run
-        // the app on. For desktop platforms, the controls will be smaller and
-        // closer together (more dense) than on mobile platforms.
-        visualDensity: VisualDensity.adaptivePlatformDensity,
-      ),
-      home: MyHomePage(title: 'Flutter Demo Home Page'),
-    );
-  }
-}
+void main() => runApp(MyApp());
 
-class MyHomePage extends StatefulWidget {
-  MyHomePage({Key key, this.title}) : super(key: key);
-
-  // This widget is the home page of your application. It is stateful, meaning
-  // that it has a State object (defined below) that contains fields that affect
-  // how it looks.
-
-  // This class is the configuration for the state. It holds the values (in this
-  // case the title) provided by the parent (in this case the App widget) and
-  // used by the build method of the State. Fields in a Widget subclass are
-  // always marked "final".
-
-  final String title;
+class MyApp extends StatefulWidget {
+  const MyApp({Key key}) : super(key: key);
 
   @override
-  _MyHomePageState createState() => _MyHomePageState();
+  _MyApp createState() => _MyApp();
 }
 
-class _MyHomePageState extends State<MyHomePage> {
-  int _counter = 0;
-
-  void _incrementCounter() {
-    setState(() {
-      // This call to setState tells the Flutter framework that something has
-      // changed in this State, which causes it to rerun the build method below
-      // so that the display can reflect the updated values. If we changed
-      // _counter without calling setState(), then the build method would not be
-      // called again, and so nothing would appear to happen.
-      _counter++;
-    });
+class _MyApp extends State<MyApp> {
+  final _title = 'トレンド極';
+
+  var _menuIndex = 0;
+  final _menuItems = [
+    MenuItem(
+      icon: Icon(Icons.tag),
+      title: 'ワード',
+      widget: HelloWorldWidget(),
+    ),
+    MenuItem(
+      icon: Icon(Icons.check),
+      title: 'おすすめ',
+      widget: ImageTestWidget(),
+    ),
+    MenuItem(
+      icon: Icon(Icons.videocam),
+      title: '配信中',
+      widget: HelloWorldWidget(),
+    ),
+  ];
+
+  void _menuSwitch(int index) {
+    print(index);
+    setState(() => _menuIndex = index);
   }
 
   @override
   Widget build(BuildContext context) {
-    // This method is rerun every time setState is called, for instance as done
-    // by the _incrementCounter method above.
-    //
-    // The Flutter framework has been optimized to make rerunning build methods
-    // fast, so that you can just rebuild anything that needs updating rather
-    // than having to individually change instances of widgets.
-    return Scaffold(
-      appBar: AppBar(
-        // Here we take the value from the MyHomePage object that was created by
-        // the App.build method, and use it to set our appbar title.
-        title: Text(widget.title),
-      ),
-      body: Center(
-        // Center is a layout widget. It takes a single child and positions it
-        // in the middle of the parent.
-        child: Column(
-          // Column is also a layout widget. It takes a list of children and
-          // arranges them vertically. By default, it sizes itself to fit its
-          // children horizontally, and tries to be as tall as its parent.
-          //
-          // Invoke "debug painting" (press "p" in the console, choose the
-          // "Toggle Debug Paint" action from the Flutter Inspector in Android
-          // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
-          // to see the wireframe for each widget.
-          //
-          // Column has various properties to control how it sizes itself and
-          // how it positions its children. Here we use mainAxisAlignment to
-          // center the children vertically; the main axis here is the vertical
-          // axis because Columns are vertical (the cross axis would be
-          // horizontal).
-          mainAxisAlignment: MainAxisAlignment.center,
-          children: <Widget>[
-            Text(
-              'You have pushed the button this many times:',
-            ),
-            Text(
-              '$_counter',
-              style: Theme.of(context).textTheme.headline4,
-            ),
-          ],
+    return MaterialApp(
+      title: _title,
+      home: Scaffold(
+        appBar: AppBar(
+          title: Text(_title),
+          centerTitle: true,
+          backgroundColor: Colors.black87,
+        ),
+        body: _menuItems.elementAt(_menuIndex).widget,
+        bottomNavigationBar: MenuWidget(
+          index: _menuIndex,
+          items: _menuItems,
+          tap: _menuSwitch,
         ),
       ),
-      floatingActionButton: FloatingActionButton(
-        onPressed: _incrementCounter,
-        tooltip: 'Increment',
-        child: Icon(Icons.add),
-      ), // This trailing comma makes auto-formatting nicer for build methods.
     );
   }
 }
diff --git a/lib/menu.dart b/lib/menu.dart
new file mode 100644
index 0000000..6f1b0ea
--- /dev/null
+++ b/lib/menu.dart
@@ -0,0 +1,32 @@
+import 'package:flutter/material.dart';
+
+class MenuItem {
+  final Icon icon;
+  final String title;
+  final Widget widget;
+
+  const MenuItem({this.icon, this.title, this.widget});
+}
+
+class MenuWidget extends StatelessWidget {
+  final int index;
+  final List<MenuItem> items;
+  final Function(int) tap;
+
+  const MenuWidget({this.index, this.items, this.tap});
+
+  @override
+  Widget build(BuildContext context) {
+    return BottomNavigationBar(
+      items: items.map((item) {
+        return BottomNavigationBarItem(
+          icon: item.icon,
+          label: item.title,
+        );
+      }).toList(),
+      currentIndex: index,
+      selectedItemColor: Colors.black87,
+      onTap: tap,
+    );
+  }
+}
diff --git a/lib/widget/hello_world.dart b/lib/widget/hello_world.dart
new file mode 100644
index 0000000..4a3f300
--- /dev/null
+++ b/lib/widget/hello_world.dart
@@ -0,0 +1,10 @@
+import 'package:flutter/material.dart';
+
+class HelloWorldWidget extends StatelessWidget {
+  @override
+  Widget build(BuildContext context) {
+    return Center(
+      child: Text('Hello World'),
+    );
+  }
+}
diff --git a/lib/widget/image_test.dart b/lib/widget/image_test.dart
new file mode 100644
index 0000000..39429d4
--- /dev/null
+++ b/lib/widget/image_test.dart
@@ -0,0 +1,14 @@
+import 'package:flutter/material.dart';
+
+class ImageTestWidget extends StatelessWidget {
+  @override
+  Widget build(BuildContext context) {
+    return Image.network(
+      'https://pbs.twimg.com/media/Et1O05-VIAQPdb1?format=jpg&name=medium',
+      height: double.infinity,
+      width: double.infinity,
+      fit: BoxFit.cover,
+      alignment: Alignment.center,
+    );
+  }
+}
